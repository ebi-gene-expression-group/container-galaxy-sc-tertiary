<tool id="scanpy_parameter_iterator" name="Scanpy ParameterIterator" version="0.0.1+galaxy0">
    <description>produce an iteration over a defined parameter</description>
    <macros>
      <import>scanpy_macros.xml</import>
    </macros>
    <requirements>
      <requirement type="package" version="1.42.1">bioconductor-rtracklayer</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
	 mkdir outputs;
	 for param in \$(seq '$start_value' '$step' '$end_value'); do
	    echo \$param > outputs/'$parameter_name'_\$param\.txt;
	 done
	    ]]></command>

    <inputs>
      <param type="select" name="parameter_name" label="Choose the format of the expression data" help="Use compressed txt, Scanpy or Seurat objects">
        <option value="resolution" selected="true">Resolution</option>
        <option value="perplexity">Perplexity</option>
      </param>
      <param type="float" value="0" name="start_value" label="Starting value" help="Initial value for the parameter"/>
      <param type="float" value="1" name="step" label="Step" help="Increment to use from first to last value"/>
      <param type="float" value="10" name="end_value" label="Ending value" help="Final value for the parameter. The final value is not included if increments of step don't match the last value."/>
    </inputs>

    <outputs>
      <collection name="parameter_iteration" type="list" label="Parameter iterated">
        <discover_datasets pattern="__name_and_ext__" directory="outputs" />
      </collection>
    </outputs>

    <tests>
      <test>
        <param name="parameter_name" value="perplexity"/>
        <param name="start_value" value="1"/>
        <param name="step" value="1"/>
        <param name="end_value" value="2"/>
        <output_collection name="parameter_iteration">
          <element name="perplexity_1"/>
          <element name="perplexity_2">
            <assert_contents>
              <has_line line="2" />
            </assert_contents>
          </element>
        </output_collection>
      </test>
    </tests>

    <help><![CDATA[
.. class:: infomark

**What it does**

Given start, step and end, it will iterate parameters for either perplexity or
resolution.

**Inputs**

* Parameter name: either Resolution or Perplexity.
* Starting value: float for Resolution, integer for Perplexity.
* Step: float for Resolution, integer for Perplexity.
* End value: float for Resolution, integer for Perplexity.

**Outputs**

* Collection of parameters to be passed to either Scanpy run tSNE (perplexity) or Scanpy find clusters (resolution).

@VERSION_HISTORY@
]]></help>
 <expand macro="citations"/>
</tool>
