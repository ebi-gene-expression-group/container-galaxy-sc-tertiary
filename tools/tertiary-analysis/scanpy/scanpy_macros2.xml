<macros>
  <token name="@TOOL_VERSION@">1.4.3</token>
  <token name="@HELP@">More information can be found at https://scanpy.readthedocs.io</token>
  <token name="@PROFILE@">18.01</token>
  <token name="@VERSION_HISTORY@"><![CDATA[
**Version history**

1.4.3+galaxy10: Update to scanpy-scripts 0.2.10 (running scanpy ==1.4.3) to address bugfixes in run-pca.

1.4.3+galaxy10: Update to scanpy-scripts 0.2.9 (running scanpy ==1.4.3) to address bugfixes in find-variable-genes.

1.4.3+galaxy10: Use profile 18.01 for modules.

1.4.3+galaxy6: Update to scanpy-scripts 0.2.8 (running scanpy ==1.4.3) and wider compatibility with other Galaxy modules. Bug fixes in filtering and plotting improvements.

1.4.3+galaxy0: Update to scanpy-scripts 0.2.5 (running scanpy ==1.4.3).

1.4.2+galaxy0: Update to scanpy-scripts 0.2.4 (requires scanpy >=1.4.2).

1.3.2+galaxy1: Normalise-data and filter-genes: Exposes ability to output 10x files.

1.3.2+galaxy0: Initial contribution. Ni Huang and Pablo Moreno, Expression Atlas team https://www.ebi.ac.uk/gxa/home  at
EMBL-EBI https://www.ebi.ac.uk/ and Teichmann Lab at Wellcome Sanger Institute.
    ]]></token>
  <token name="@INPUT_OPTS@">
    --input-format '${input_format}' input.h5
  </token>
  <token name="@OUTPUT_OPTS@">
#if str($output_format).startswith('anndata')
    --show-obj stdout --output-format anndata output.h5
#else
    --show-obj stdout --output-format loom output.h5
#end if
  </token>
  <token name="@PLOT_OPTS@">
#if $fig_title
    --title '${fig_title}'
#end if
    --fig-size '${fig_size}'
    --fig-dpi ${fig_dpi}
    --fig-fontsize ${fig_fontsize}
    ${fig_frame}
    ./output.png
  </token>
  <token name="@EXPORT_MTX_OPTS@">${export_mtx}</token>

  <xml name="requirements">
    <requirements>
      <requirement type="package" version="0.2.10">scanpy-scripts</requirement>
      <yield/>
    </requirements>
  </xml>

  <xml name="citations">
    <citations>
      <yield />
      <citation type="doi">10.1186/s13059-017-1382-0</citation>
      <citation type="bibtex">
	@misc{githubscanpy-scripts,
	author = {Ni Huang, EBI Gene Expression Team},
	year = {2018},
	title = {Scanpy-scripts: command line interface for Scanpy},
	publisher = {GitHub},
	journal = {GitHub repository},
	url = {https://github.com/ebi-gene-expression-group/scanpy-scripts},
      }</citation>
    </citations>
  </xml>

  <xml name="input_object_params">
    <param name="input_obj_file" argument="input-object-file" type="data" format="h5,h5ad" label="Input object in AnnData/Loom format"/>
    <param name="input_format" argument="--input-format" type="select" label="Format of input object">
      <option value="anndata" selected="true">AnnData format hdf5</option>
      <option value="loom">Loom format hdf5</option>
    </param>
  </xml>

  <xml name="output_object_params">
    <param name="output_format" argument="--output-format" type="select" label="Format of output object">
      <option value="anndata_h5ad" selected="true">AnnData format</option>
      <option value="anndata">AnnData format (h5 for older versions)</option>
      <option value="loom">Loom format</option>
      <option value="loom_legacy">Loom format (h5 for older versions)</option>
    </param>
  </xml>

  <xml name="output_object_params_no_loom">
    <param name="output_format" argument="--output-format" type="select" label="Format of output object">
      <option value="anndata_h5ad" selected="true">AnnData format</option>
      <option value="anndata">AnnData format (h5 for older versions)</option>
    </param>
  </xml>

  <xml name="output_data_obj_no_loom" token_description="operation">
    <data name="output_h5ad" format="h5ad" from_work_dir="output.h5" label="${tool.name} on ${on_string}: @DESCRIPTION@ AnnData">
      <filter>output_format == 'anndata_h5ad'</filter>
    </data>
    <data name="output_h5" format="h5" from_work_dir="output.h5" label="${tool.name} on ${on_string}: @DESCRIPTION@ AnnData">
      <filter>output_format == 'anndata'</filter>
    </data>
  </xml>

  <xml name="output_data_obj" token_description="operation">
    <data name="output_h5ad" format="h5ad" from_work_dir="output.h5" label="${tool.name} on ${on_string}: @DESCRIPTION@ AnnData">
      <filter>output_format == 'anndata_h5ad'</filter>
    </data>
    <data name="output_h5" format="h5" from_work_dir="output.h5" label="${tool.name} on ${on_string}: @DESCRIPTION@ AnnData">
      <filter>output_format == 'anndata'</filter>
    </data>
    <data name="output_loom_legacy" format="h5" from_work_dir="output.h5" label="${tool.name} on ${on_string}: @DESCRIPTION@ Loom">
      <filter>output_format == 'loom_legacy'</filter>
    </data>
    <data name="output_loom" format="loom" from_work_dir="output.h5" label="${tool.name} on ${on_string}: @DESCRIPTION@ Loom">
      <filter>output_format == 'loom'</filter>
    </data>
  </xml>

  <xml name="output_plot_params">
    <param name="fig_title" argument="--title" type="text" label="Figure title"/>
    <param name="fig_size" argument="--fig-size" type="text" value="4,4" label="Figure size as 'width,height', e.g, '7,7'"/>
    <param name="fig_dpi" argument="--fig-dpi" type="integer" min="1" value="80" label="Figure dpi"/>
    <param name="fig_fontsize" argument="--fig-fontsize" type="integer" min="0" value="10" label="Figure font size"/>
    <param name="fig_frame" type="boolean" truevalue="--frameon" falsevalue="--frameoff" checked="false"
           label="Show plot frame"/>
  </xml>

  <xml name="export_mtx_params">
    <param name="export_mtx" argument="--export-mtx" type="boolean" truevalue="--export-mtx ./" falsevalue="" checked="false" label="Save to 10x mtx format" help="If enabled, it will generate in addition to the main output in Loom or AnnData an export in 10x format."/>
  </xml>

  <xml name="export_mtx_outputs">
    <data name="matrix_10x" format="txt" from_work_dir="matrix.mtx" label="${tool.name} on ${on_string}: 10x matrix">
      <filter>export_mtx</filter>
    </data>
    <data name="genes_10x" format="tsv" from_work_dir="genes.tsv" label="${tool.name} on ${on_string}: 10x genes">
      <filter>export_mtx</filter>
    </data>
    <data name="barcodes_10x" format="tsv" from_work_dir="barcodes.tsv" label="${tool.name} on ${on_string}: 10x barcodes">
      <filter>export_mtx</filter>
    </data>
  </xml>
</macros>
