<?xml version="1.0" encoding="utf-8"?>
<tool id="scanpy_normalise_data" name="Scanpy NormaliseData" version="@TOOL_VERSION@+galaxy1">
  <description>to make all cells having the same total expression</description>
  <macros>
    <import>scanpy_macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
ln -s '${input_obj_file}' input.h5 &&
PYTHONIOENCODING=utf-8 scanpy-normalise-data.py
    -i input.h5
    -f '${input_format}'
    -o output.h5
    -F '${output_format}'
    -s '${scale_factor}'
    #if $save_raw
        '${save_raw}'
    #end if
    #if $export_mtx
        '${export_mtx}' ./
    #end if
]]></command>

  <inputs>
    <expand macro="input_object_params"/>
    <expand macro="output_object_params"/>
    <param name="scale_factor" argument="--scale-factor" type="float" value="1e4" label="Target number to normalise to" help="Aimed counts per cell after normalisation, default: 1e4"/>
    <param name="save_raw" argument="--save-raw" type="boolean" truevalue="--save-raw" falsevalue="" checked="true" label="Save pre-normalised data" help="Save raw quantification in log scale before normalisation."/>
    <param name="export_mtx" argument="--export-mtx" type="boolean" truevalue="--export-mtx" falsevalue="" checked="false" label="Save normalised data to 10x format" help="If enabled, it will generate in addition to the main output in Loom or AnnData an export in 10x format of the normalised data."/>
  </inputs>

  <outputs>
    <data name="output_h5" format="h5" from_work_dir="output.h5" label="${tool.name} on ${on_string}: Normalized data" />
    <data name="matrix_10x" format="txt" from_work_dir="matrix.mtx" label="${tool.name} on ${on_string}: 10x matrix">
      <filter>export_mtx</filter>
    </data>
    <data name="genes_10x" format="tsv" from_work_dir="genes.tsv" label="${tool.name} on ${on_string}: 10x genes">
      <filter>export_mtx</filter>
    </data>
    <data name="barcodes_10x" format="tsv" from_work_dir="barcodes.tsv" label="${tool.name} on ${on_string}: 10x barcodes">
      <filter>export_mtx</filter>
    </data>
  </outputs>

  <tests>
    <test>
      <param name="input_obj_file" value="filter_genes.h5"/>
      <param name="input_format" value="anndata"/>
      <param name="output_format" value="anndata"/>
      <param name="scale_factor" value="1e4"/>
      <param name="save_raw" value="false"/>
      <output name="output_h5" file="normalise_data.h5" ftype="h5" compare="sim_size"/>
    </test>
  </tests>

  <help><![CDATA[
=========================================================
Normalize total counts per cell (`pp.normalize_per_cell`)
=========================================================

Normalize each cell by total counts over all genes, so that every cell has
the same total count after normalization.

Similar functions are used, for example, by Seurat, Cell Ranger or SPRING.

@HELP@

@VERSION_HISTORY@
]]></help>
  <expand macro="citations"/>
</tool>
