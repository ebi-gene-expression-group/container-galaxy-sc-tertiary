<?xml version="1.0" encoding="utf-8"?>
<tool id="scanpy_filter_genes" name="Scanpy FilterGenes" version="@TOOL_VERSION@+galaxy3">
  <description>based on counts and numbers of cells expressed</description>
  <macros>
    <import>scanpy_macros2.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
ln -s '${input_obj_file}' input.h5 &&
PYTHONIOENCODING=utf-8 scanpy-filter-genes
#if $parameters
    #set pars = ' '.join(['--param g:{name} {min} {max}'.format(**$p) for $p in $parameters])
    ${pars}
#end if
#if $categories
    #set cats = ' '.join(['--category g:{name} {values}'.format(**$c) for $c in $categories])
    ${cats}
#end if
#if $subsets
    #set subs = ' '.join(['--subset g:{name} {subset}'.format(**$s) for $s in $subsets])
    ${subs}
#end if
    @INPUT_OPTS@
    @OUTPUT_OPTS@
    @EXPORT_MTX_OPTS@
]]></command>

  <inputs>
    <expand macro="input_object_params"/>
    <expand macro="output_object_params"/>

    <repeat name="parameters" title="Parameters used to filter genes" min="1">
      <param name="name" type="text" value="n_cells" label="Name of parameter to filter on" help="for example n_genes or n_counts">
        <option value="n_cells">n_cells</option>
        <option value="n_counts">n_counts</option>
      </param>
      <param name="min" type="float" min="0" value="0" label="Min value"/>
      <param name="max" type="float" min="0" value="1e9" label="Max value"/>
    </repeat>

    <repeat name="categories" title="Categories used to filter genes" min="0">
      <param name="name" type="text" value="" label="Name of the categorical variable to filter on"/>
      <param name="values" type="text" value="" label="Comma-separated values to keep"/>
    </repeat>

    <repeat name="subsets" title="Subsets used to filter genes" min="0">
      <param name="name" type="text" value="" label="Name of the categorical variable to filter on"/>
      <param name="subset" type="data" format="tabular" label="List of values to keep" help="A one-column headerless text file is required"/>
    </repeat>
    <expand macro="export_mtx_params"/>
  </inputs>

  <outputs>
    <data name="output_h5" format="h5" from_work_dir="output.h5" label="${tool.name} on ${on_string}: Filtered genes"/>
    <expand macro="export_mtx_outputs"/>
  </outputs>

  <tests>
    <test>
      <param name="input_obj_file" value="filter_cells.h5"/>
      <param name="input_format" value="anndata"/>
      <param name="output_format" value="anndata"/>
      <repeat name="parameters">
        <param name="name" value="n_cells"/>
        <param name="min" value="3"/>
        <param name="max" value="1e9"/>
      </repeat>
      <repeat name="parameters">
        <param name="name" value="n_counts"/>
        <param name="min" value="0"/>
        <param name="max" value="1e9"/>
      </repeat>
      <output name="output_h5" file="filter_genes.h5" ftype="h5" compare="sim_size"/>
    </test>
  </tests>

  <help><![CDATA[
=====================================================================
Filter genes based on arbitrary attributes (`scanpy.pp.filter_genes`)
=====================================================================

Keep genes that have at least `min_counts` counts or are expressed in at
least `min_cells` cells or have at most `max_counts` counts or are expressed
in at most `max_cells` cells. Other gene attributes can be used for filtering
too if available.


@HELP@

@VERSION_HISTORY@
]]></help>
  <expand macro="citations"/>
</tool>
