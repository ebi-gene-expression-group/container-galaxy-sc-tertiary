<?xml version="1.0" encoding="utf-8"?>
<tool id="scanpy_regress_variable" name="Scanpy RegressOut" version="@TOOL_VERSION@+galaxy10" profile="@PROFILE@">
  <description>variables that might introduce batch effect</description>
  <macros>
    <import>scanpy_macros2.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
#if $variable_keys
  ln -s '${input_obj_file}' input.h5 &&
  PYTHONIOENCODING=utf-8 scanpy-regress
      --keys '${variable_keys}'
      @INPUT_OPTS@
      @OUTPUT_OPTS@
#else
  echo "No regression variables passed, simply passing original input as output unchanged.";
  cp '${input_obj_file}' '${output_h5}'
#end if
]]></command>

  <inputs>
    <expand macro="input_object_params"/>
    <expand macro="output_object_params"/>
    <param name="variable_keys" type="text" label="Variables to regress out" help="Use comma to separate multiple variables. Not supplying variables will simply pass the input data as output unchanged.">
      <sanitizer>
        <valid initial="string.printable"/>
      </sanitizer>
    </param>
  </inputs>

  <outputs>
    <expand macro="output_data_obj" description="Regressed out ${variable_keys}"/>
  </outputs>

  <tests>
    <test>
      <param name="input_obj_file" value="find_variable_genes.h5"/>
      <param name="input_format" value="anndata"/>
      <param name="output_format" value="anndata"/>
      <param name="variable_keys" value="n_counts"/>
      <output name="output_h5" file="scale_data.h5" ftype="h5" compare="sim_size"/>
    </test>
  </tests>

  <help><![CDATA[
    .. class:: infomark

    **What it does**

    Regress out unwanted source of variance (`scanpy.pp.regress_out`)

    @HELP@

    @VERSION_HISTORY@
]]></help>
  <expand macro="citations"/>
</tool>
