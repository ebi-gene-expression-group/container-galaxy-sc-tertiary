<tool id="pyscenic_grn" name="PySCENIC GRN" version="@TOOL_VERSION@+galaxy0" profile="21.09">
    <description>infers gene regulatory networks</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code">
        <![CDATA[
            ln -s '${expression_mtx}' expr_mat.loom && 
            ln -s '${tfs_fname}' tfs.txt &&
            #if $use_arboretum
                arboreto_with_multiprocessing.py
            #else
                pyscenic grn 
            #end if
            -o tf2targets.tsv
            $transpose
            #if $method
            -m '${method}'
            #end if
            #if $seed
            --seed '${seed}'
            #end if
            --num_workers \${GALAXY_SLOTS:-1}
            #if $cell_id_attribute
            --cell_id_attribute '${cell_id_attribute}'
            #end if
            #if $gene_attribute
            --gene_attribute '${gene_attribute}'
            #end if
            $sparse
            
            expr_mat.loom tfs.txt &&
            mv tf2targets.tsv '${tf2targets}'
        ]]>
    </command>
    <inputs>
        <param name="expression_mtx" type="data" format="loom" label="Expression Matrix Loom File" help="In format rows=genes x columns=cells"/>
        <param name="tfs_fname" type="data" format="txt" label="Transcription Factors File" help="Simple text file, one transcription factor symbol per line"/>
        <param name="use_arboretum" type="boolean" label="Use arboretum" checked="false" help="Uses the arboretum approach instead of pyscenic grn call, which can be better for multi processing"/>
        <param name="transpose" type="boolean" truevalue="-t" falsevalue="" label="Transpose Expression Matrix" help="Use this if the matrix is cell x genes instead of genes x cells as expected"/>
        <param name="method" type="select" label="Method">
            <option value="genie3">GENIE3</option>
            <option value="grnboost2" selected="true">GRNBoost2</option>
        </param>
        <param name="cell_id_attribute" type="text" optional="true" label="Cell ID Attribute"/>
        <param name="gene_attribute" type="text" optional="true" label="Gene Attribute"/>
        <param name="sparse" type="boolean" label="Sparse Matrix" truevalue="--sparse" falsevalue="" help="If set, load the expression data as a sparse matrix. Currently applies to the grn inference step only."/>
        <param name="seed" type="integer" optional="true" label="Seed"/>
    </inputs>
    <outputs>
        <data name="tf2targets" format="tabular" label="${tool.name} on ${on_string}: gene regulatory network"/>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="expression_mtx" value="expr_mat.loom"/>
            <param name="tfs_fname" value="allTFs_hg38.txt"/>
            <param name="seed" value="1"/>
            <output name="tf2targets">
                <assert_contents>
                    <has_n_lines n="1006973"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="1">
            <param name="expression_mtx" value="expr_mat.loom"/>
            <param name="tfs_fname" value="allTFs_hg38.txt"/>
            <param name="use_arboretum" value="true"/>
            <param name="seed" value="1"/>
            <output name="tf2targets" ftype="tabular">
                <assert_contents>
                    <has_n_lines n="1006973"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
        This tool runs the `pyscenic grn` command to infer gene regulatory networks.

        **Inputs:**

        - Expression Matrix File: Loom file containing the expression matrix, (rows=genes x columns=cells)
        - Transcription Factors File: TXT file with a list of transcription factors.
        
        **Options:**

        - Output File: Path to the output file (CSV format).
        - Transpose Expression Matrix: If selected, transpose the expression matrix.
        - Method: Algorithm for gene regulatory network reconstruction (default: GRNBoost2).
        - Seed: Seed value for random state initialization.
        - Number of Workers: Number of workers to use for computation.
        - Client or Address: Client or IP address of the dask scheduler.
        - Cell ID Attribute: Column attribute for cell identifiers in the loom file.
        - Gene Attribute: Row attribute for gene symbols in the loom file.
        - Load as Sparse Matrix: Load the expression data as a sparse matrix.
    ]]></help>
    <expand macro="citations"/>
</tool>
