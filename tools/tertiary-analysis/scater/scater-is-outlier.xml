<tool id="scater-is-outlier" name="Scater outlier detection" version="@TOOL_VERSION@+galaxy0">
    <description>Detect outliers from total counts file</description>
    <macros>
        <import>scater_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
       ln -s '$extracted_metrics_file' extracted_metrics_file.txt;

        scater-is-outlier.R -m '$extracted_metrics_file' 
        					#if $nmads:
        						-n '$nmads'
        					#end if 
        					#if $outlier_type:
        						-t '$outlier_type' 
        					#end if	
        					#if $outlier_log:
        						-l '$outlier_log' 
        					#end if	
        					#if $outlier_min_diff:	
        						-d '$outlier_min_diff' 
        					#end if
        					-o '$outliers_file'
    ]]></command>
    <inputs>
        <param type="data" name="extracted_metrics_file" format="txt" />
        <param type="integer" argument="--nmads" value="5" name="nmads" optional="True" label="number of median absolute deviations" />
        <param type="text" argument="--type" name="outlier_type" value="both" optional="True"/>
        <param type="boolean" argument="--log" name="outlier_log" />
        <param type="integer" argument="--min-diff" name="outlier_min_diff" value="5" optional="True" />
    </inputs>
    <outputs>
        <data name="outliers_file" format="txt" label="File where to store outliers"/>
    </outputs>
    <tests>
        <test>
            <param name="extracted_metrics_file" value="extracted_metrics_file.txt"/>
            <output name="outliers_file" file="outliers_file.txt"/>
        </test>
    </tests>
    <help><![CDATA[

    ]]></help>
    <expand macro="citations" />
</tool>
