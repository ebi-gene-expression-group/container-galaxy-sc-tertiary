<tool id="cshl_fastq_quality_trimmer" name="Trim By Quality" profile="18.01" version="0.0.14+galaxy0">
	<description>Trims reads at the 3'-end based on quality, discarding reads with trimmed length less than threshold.</description>
    <requirements>
        <requirement type="package" version="0.0.14">fastx_toolkit</requirement>
    </requirements>
	<command><![CDATA[
        fastq_quality_trimmer 
        -i '$input'
        -t '$cutoff' 
        -l '$minlen' 
        -Q '$phred'
        -v 
        -o '$output'
        ]]></command>

	<inputs>
        <param name="input" label="Library to clip" argument="-i" type="data" format="fastq,fastqsanger" optional="false" />
		<param name="cutoff" size="4" type="integer" value="20">
			<label>Minimum quality score</label>
			<help>Nucleotides below this quality will be trimmed</help>
		</param>
		<param name="minlen" size="4" type="integer" value="1">
			<label>Minimum sequence length</label>
			<help>Sequences shorter than this length will be discard. Leave at zero to keep all sequences</help>
		</param>
        <param name="phred" label="PHRED Encoding" argument="-Q" type="select" help="PHRED encoding used in the input files">
            <option value="33" selected="true">33</option>
            <option value="64">64</option>
        </param>
	</inputs>

    <outputs>
        <data label="${tool.name} on ${on_string}: Trimmed fastq" name="output" format_source="input" />
    </outputs>

	<tests>
		<test>
			<param name="input" value="fastq_quality_trimmer.fastq" ftype="fastq" />
			<param name="cutoff" value="30"/>
			<param name="minlen" value="16"/>
			<param name="phred" value="64"/>
            <output name="output" md5="5173e32392286a05e1317387cc0d567e" />
		</test>
	</tests>

	<help>
**What it does**

This tool scans the sequence from the end for the first nucleotide to possess the specified minimum quality score. It will then trim (remove nucleotides from) the sequence after this position. After trimming, sequences that are shorter than the minimum length are discarded.
  
--------

**Example**

Input Fasta file (with 20 bases in each sequences)::

    @1
    TATGGTCAGAAACCATATGC
    +1
    40 40 40 40 40 40 40 40 40 40 40 20 19 19 19 19 19 19 19 19
    @2
    CAGCGAGGCTTTAATGCCAT
    +2
    40 40 40 40 40 40 40 40 30 20 19 20 19 19 19 19 19 19 19 19
    @3
    CAGCGAGGCTTTAATGCCAT
    +3
    40 40 40 40 40 40 40 40 20 19 19 19 19 19 19 19 19 19 19 19
    

Trimming with a cutoff of 20, we get the following FASTQ file::

    @1
    TATGGTCAGAAA
    +1
    40 40 40 40 40 40 40 40 40 40 40 20
    @2
    CAGCGAGGCTTT
    +2
    40 40 40 40 40 40 40 40 30 20 19 20
    @3
    CAGCGAGGC
    +3
    40 40 40 40 40 40 40 40 20

Trimming with a cutoff of 20 and a minimum length of 12, we get the following FASTQ file::

    @1
    TATGGTCAGAAA
    +1
    40 40 40 40 40 40 40 40 40 40 40 20
    @2
    CAGCGAGGCTTT
    +2
    40 40 40 40 40 40 40 40 30 20 19 20
    
------

This tool is based on `FASTX-toolkit`__ by Assaf Gordon.

 .. __: http://hannonlab.cshl.edu/fastx_toolkit/
    
    </help>
    <citations>
        <citation type="bibtex"><![CDATA[
            @ARTICLE{Gordon2009,
            author = {Gordon, A.},
            title = {fastx_toolkit},
            year = {2009},
            publisher = {GitHub},
            journal = {GitHub repository},
            howpublished = {\url{https://github.com/agordon/fastx_toolkit}},
            commit = {ea0ca83ba24dce80c20ca589b838a281fe5deb0c}
}]]></citation>
    </citations>
</tool>
<!-- FASTX-Quality-Trimmer is part of the FASTX-toolkit, by A.Gordon (gordon@cshl.edu) -->
